{
  "_args": [
    [
      {
        "raw": "@material/grid-list@^0.34.0",
        "scope": "@material",
        "escapedName": "@material%2fgrid-list",
        "name": "@material/grid-list",
        "rawSpec": "^0.34.0",
        "spec": ">=0.34.0 <0.35.0",
        "type": "range"
      },
      "/media/quadabra/50040A68040A5180/me/e-shop.new/node_modules/material-components-web"
    ]
  ],
  "_from": "@material/grid-list@>=0.34.0 <0.35.0",
  "_id": "@material/grid-list@0.34.0",
  "_inCache": true,
  "_location": "/@material/grid-list",
  "_nodeVersion": "8.11.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/grid-list_0.34.0_1522705915830_0.9241017849098079"
  },
  "_npmUser": {
    "name": "acdvorak",
    "email": "acdvorak@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@material/grid-list@^0.34.0",
    "scope": "@material",
    "escapedName": "@material%2fgrid-list",
    "name": "@material/grid-list",
    "rawSpec": "^0.34.0",
    "spec": ">=0.34.0 <0.35.0",
    "type": "range"
  },
  "_requiredBy": [
    "/material-components-web"
  ],
  "_resolved": "https://registry.npmjs.org/@material/grid-list/-/grid-list-0.34.0.tgz",
  "_shasum": "677faee1edf58f352a6f6191515655019463de54",
  "_shrinkwrap": null,
  "_spec": "@material/grid-list@^0.34.0",
  "_where": "/media/quadabra/50040A68040A5180/me/e-shop.new/node_modules/material-components-web",
  "bugs": {
    "url": "https://github.com/material-components/material-components-web/issues"
  },
  "dependencies": {
    "@material/base": "^0.34.0",
    "@material/rtl": "^0.34.0",
    "@material/theme": "^0.34.0",
    "@material/typography": "^0.34.0"
  },
  "description": "The Material Components for the web grid list component",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-5P7kr8xFABVHsHeUA6de7fabWLNptfqFSSMTl4wWujLIqxfinBdmnDQbFkDfpQxjyXS/r3ahSeljWFWrJRCgJg==",
    "shasum": "677faee1edf58f352a6f6191515655019463de54",
    "tarball": "https://registry.npmjs.org/@material/grid-list/-/grid-list-0.34.0.tgz",
    "fileCount": 10,
    "unpackedSize": 63670
  },
  "homepage": "https://github.com/material-components/material-components-web#readme",
  "keywords": [
    "material components",
    "material design",
    "grid list"
  ],
  "license": "Apache-2.0",
  "maintainers": [
    {
      "name": "acdvorak",
      "email": "acdvorak@gmail.com"
    },
    {
      "name": "amsheehan",
      "email": "alex.m.sheehan@gmail.com"
    },
    {
      "name": "aprigogin",
      "email": "andrey.prigogin@gmail.com"
    },
    {
      "name": "azakus",
      "email": "dfreedm2@gmail.com"
    },
    {
      "name": "bonniez",
      "email": "bonniez@google.com"
    },
    {
      "name": "bwobrien",
      "email": "obrien.test@gmail.com"
    },
    {
      "name": "kfranqueiro",
      "email": "kenneth.franqueiro@gmail.com"
    },
    {
      "name": "lynnjepsen",
      "email": "lynnjepsen@google.com"
    },
    {
      "name": "material-admin",
      "email": "lynnjepsen+npm@google.com"
    },
    {
      "name": "moog16",
      "email": "mattgoo@gmail.com"
    },
    {
      "name": "patrickrodee",
      "email": "prodee@google.com"
    },
    {
      "name": "williamernest",
      "email": "williamernest@google.com"
    }
  ],
  "name": "@material/grid-list",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "<!--docs:\ntitle: \"Grid Lists\"\nlayout: detail\nsection: components\nexcerpt: \"An RTL-aware Material Design grid list component.\"\niconId: card\npath: /catalog/grid-lists/\n-->\n\n# Grid Lists\n\n<!--<div class=\"article__asset\">\n  <a class=\"article__asset-link\"\n     href=\"https://material-components-web.appspot.com/grid-list.html\">\n    <img src=\"{{ site.rootpath }}/images/mdc_web_screenshots/grids.png\" width=\"320\" alt=\"Grid lists screenshot\">\n  </a>\n</div>-->\n\nMDC Grid List provides a RTL-aware Material Design Grid list component adhering to the\n[Material Design Grid list spec](https://material.io/guidelines/components/grid-lists.html).\nGrid Lists are best suited for presenting homogeneous data, typically images.\nEach item in a grid list is called a **tile**. Tiles maintain consistent width, height, and padding\nacross screen sizes.\n\n## Design & API Documentation\n\n<ul class=\"icon-list\">\n  <li class=\"icon-list-item icon-list-item--spec\">\n    <a href=\"https://material.io/guidelines/components/grid-lists.html\">Material Design guidelines: Grid lists</a>\n  </li>\n  <li class=\"icon-list-item icon-list-item--link\">\n    <a href=\"https://material-components-web.appspot.com/grid-list.html\">Demo</a>\n  </li>\n</ul>\n\n## Installation\n\n```\nnpm install @material/grid-list\n```\n\n\n## Usage\n\nBasic Grid list has the following structure:\n\n```html\n<div class=\"mdc-grid-list\">\n  <ul class=\"mdc-grid-list__tiles\">\n    <li class=\"mdc-grid-tile\">\n      <div class=\"mdc-grid-tile__primary\">\n        <img class=\"mdc-grid-tile__primary-content\" src=\"my-image.jpg\" />\n      </div>\n      <span class=\"mdc-grid-tile__secondary\">\n        <span class=\"mdc-grid-tile__title\">Title</span>\n      </span>\n    </li>\n    <li class=\"mdc-grid-tile\">\n      <div class=\"mdc-grid-tile__primary\">\n        <img class=\"mdc-grid-tile__primary-content\" src=\"my-image.jpg\" />\n      </div>\n      <span class=\"mdc-grid-tile__secondary\">\n        <span class=\"mdc-grid-tile__title\">Title</span>\n      </span>\n    </li>\n  </ul>\n</div>\n```\n\nThe above markup will give you a Grid list of tiles that:\n\n- Have 4px padding in between themselves\n- Have a 1x1 aspect ratio\n- Have a one-line footer caption with no icon\n\nYou just need to put the content you want to load in `src` of\n`<img class=\"mdc-grid-tile__primary-content\" src=\"...\"/>`. However, if your\nassets don't have the same aspect ratio you as specified in the tile, it will\ndistort those assets. We provide a solution of that case in\n[Using a div in place of an img](#using-a-div-in-place-of-an-img) section.\n\n\n### Setting the tile width\n\nThe tile width is set to 200px by default. There are three ways that you can\noverwrite the default value for your grid list:\n\n1. Using CSS variables\n\n  ```css\n  .mdc-grid-tile {\n    --mdc-grid-list-tile-width: 300px;\n  }\n  ```\n\n2. Overwriting SCSS variable\n\n  You can overwrite the scss variable by\n\n  ```scss\n  $mdc-grid-list-tile-width: 300px;\n  @import \"@material/grid-list/mdc-grid-list\";\n  ```\n\n3. Add own style to tile\n\n  ```html\n  <style>\n    .my-grid-list .mdc-grid-tile {\n      width : 300px;\n    }\n  </style>\n  <div class=\"mdc-grid-list my-grid-list\">\n    <ul class=\"mdc-grid-list__tiles\">\n      <li class=\"mdc-grid-tile\"></li>\n      ...\n    </ul>\n  </div>\n  ```\n\n### Change tile padding\n\nGrid list tiles can have 1px padding instead of 4px by adding\n`mdc-grid-list--tile-gutter-1` modifier.\n\n```html\n<div class=\"mdc-grid-list mdc-grid-list--tile-gutter-1\">\n  <ul class=\"mdc-grid-list__tiles\">\n  ...\n  </ul>\n</div>\n```\n\n### Image only tile\n\nGrid lists support image only tile. You can remove `mdc-grid-tile__secondary`\nand create a image only grid list.\n\n```html\n<div class=\"mdc-grid-list mdc-grid-list--tile-gutter-1\">\n  <ul class=\"mdc-grid-list__tiles\">\n    <li class=\"mdc-grid-tile\">\n      <div class=\"mdc-grid-tile__primary\">\n        <img class=\"mdc-grid-tile__primary-content\" src=\"images/1-1.jpg\" />\n      </div>\n    </li>\n  </ul>\n</div>\n```\n\n### Header caption\n\nGrid lists support header caption. You can change the footer caption to be a\nheader caption by adding `mdc-grid-list--header-caption` modifier.\n\n```html\n<div class=\"mdc-grid-list mdc-grid-list--header-caption\">\n  <ul class=\"mdc-grid-list__tiles\">\n    ...\n  </ul>\n</div>\n```\n\n### Add support text to secondary content (caption)\n\nGrid lists support a one-line caption by default. You can add an additional line of support\ntext if needed by adding the `mdc-grid-list--twoline-caption` modifier and additional\nmarkup\n\n```html\n<div class=\"mdc-grid-list mdc-grid-list--twoline-caption\">\n  <ul class=\"mdc-grid-list__tiles\">\n    <li class=\"mdc-grid-tile\">\n      <div class=\"mdc-grid-tile__primary\">\n        <img class=\"mdc-grid-tile__primary-content\" src=\"my-image.jpg\" />\n      </div>\n      <span class=\"mdc-grid-tile__secondary\">\n        <span class=\"mdc-grid-tile__title\">Title</span>\n        <span class=\"mdc-grid-tile__support-text\">Support text</span>\n      </span>\n    </li>\n  </ul>\n</div>\n```\n\n### Add icon to secondary content (caption)\n\nYou can add an icon to a caption by adding `mdc-grid-list--with-icon-align-start` or\n`mdc-grid-list--with-icon-align-end` and changing the markup.\n\n```html\n<div class=\"mdc-grid-list mdc-grid-list--with-icon-align-start\">\n  <ul class=\"mdc-grid-list__tiles\">\n    <li class=\"mdc-grid-tile\">\n      <div class=\"mdc-grid-tile__primary\">\n        <img class=\"mdc-grid-tile__primary-content\" src=\"my-image.jpg\" />\n      </div>\n      <span class=\"mdc-grid-tile__secondary\">\n        <i class=\"mdc-grid-tile__icon material-icons\">star_border</i>\n        <span class=\"mdc-grid-tile__title\">Title</span>\n      </span>\n    </li>\n  </ul>\n</div>\n```\n\n### Change aspect ratio of tile\n\nGrid list tiles support all material guideline recommended aspect ratio:\n\n- 1x1\n- 16x9\n- 2x3\n- 3x2\n- 4x3\n- 3x4\n\nYou can use the modifier class `mdc-grid-list--tile-aspect-$ASPECT_RATIO` to apply these aspect\nratios to your grid list. Simply replace `$ASPECT_RATIO` with any of the predefined ratios.\n\n```html\n<!-- Example of 16x9 tile -->\n<div class=\"mdc-grid-list mdc-grid-list--tile-aspect-16x9\">\n  <ul class=\"mdc-grid-list__tiles\">\n  ...\n  </ul>\n</div>\n```\n\nAs pointed out in the previous section, if your\nassets don't have the same aspect ratio you as specified in the tile, it will\ndistort those assets. We provide a solution of that case in\n[Using a div in place of an img](#using-a-div-in-place-of-an-img) section.\n\n### Using a div in place of an img\n\nIn case you cannot ensure all your assets will have the same aspect ratio, you\ncan use `div` instead of `img` markup. It will resize the assets to cover the tile\nand crop the assets to display the center part.\n\n```html\n<style>\n  .my-tile-image {\n    background-image: url(my-image.jpg);\n  }\n</style>\n<div class=\"mdc-grid-list\">\n  <ul class=\"mdc-grid-list__tiles\">\n    <li class=\"mdc-grid-tile\">\n      <div class=\"mdc-grid-tile__primary\">\n        <div class=\"mdc-grid-tile__primary-content my-tile-image\"></div>\n      </div>\n      <span class=\"mdc-grid-tile__secondary\">\n        <span class=\"mdc-grid-tile__title\">Title</span>\n      </span>\n    </li>\n  </ul>\n</div>\n```\n\nHowever, the method results in a less semantic markup, so we don't use this method by\ndefault.\n\n\n### RTL Support\n\n`mdc-grid-list` is automatically RTL-aware, and will re-position elements whenever\nit, or its ancestors, have a `dir=\"rtl\"` attribute.\n\n\n### Theme\n\n`mdc-grid-list` supports theming. `mdc-grid-tile__primary` uses the theme's background\ncolor for its background color. `mdc-grid-tile__secondary` uses the theme's primary\ncolor for it's background color, and the theme's `text-primary-on-primary` color for its text color.\n\n### Using the Foundation Class\n\nMDCGridList ships with an `MDCGridListFoundation` class that external frameworks and libraries\ncan use to build their own MDCGridList components with minimal effort. As with all foundation\nclasses, an adapter object must be provided. The adapter for Grid list must provide the following\nfunctions, with correct signatures:\n\n| Method Signature | Description |\n| --- | --- |\n| `getOffsetWidth() => number` | Get root element `mdc-grid-list` offsetWidth. |\n| `getNumberOfTiles() => number` | Get the number of mdc-grid-tile elements contained within the grid list. |\n| `getOffsetWidthForTileAtIndex(index: number) => number` | Get offsetWidth of `mdc-grid-tile` at specified index. |\n| `setStyleForTilesElement(property: string, value: number) => void` | Set `mdc-grid-list__tiles` style property to provided value. |\n| `registerResizeHandler(handler: Function) => void` | Registers a handler to be called when the surface (or its viewport) resizes. Our default implementation adds the handler as a listener to the window's `resize()` event. |\n| `deregisterResizeHandler(handler: Function) => void` | Unregisters a handler to be called when the surface (or its viewport) resizes. Our default implementation removes the handler as a listener to the window's `resize()` event. |\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/material-components/material-components-web.git"
  },
  "version": "0.34.0"
}
