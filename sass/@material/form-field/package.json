{
  "_args": [
    [
      {
        "raw": "@material/form-field@^0.34.1",
        "scope": "@material",
        "escapedName": "@material%2fform-field",
        "name": "@material/form-field",
        "rawSpec": "^0.34.1",
        "spec": ">=0.34.1 <0.35.0",
        "type": "range"
      },
      "/media/quadabra/50040A68040A5180/me/e-shop.new/node_modules/material-components-web"
    ]
  ],
  "_from": "@material/form-field@>=0.34.1 <0.35.0",
  "_id": "@material/form-field@0.34.1",
  "_inCache": true,
  "_location": "/@material/form-field",
  "_nodeVersion": "8.11.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/form-field_0.34.1_1522798787403_0.33304270389487844"
  },
  "_npmUser": {
    "name": "acdvorak",
    "email": "acdvorak@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@material/form-field@^0.34.1",
    "scope": "@material",
    "escapedName": "@material%2fform-field",
    "name": "@material/form-field",
    "rawSpec": "^0.34.1",
    "spec": ">=0.34.1 <0.35.0",
    "type": "range"
  },
  "_requiredBy": [
    "/material-components-web"
  ],
  "_resolved": "https://registry.npmjs.org/@material/form-field/-/form-field-0.34.1.tgz",
  "_shasum": "b85b2a58d0e9b771bffe3893e35730f2c54d9b36",
  "_shrinkwrap": null,
  "_spec": "@material/form-field@^0.34.1",
  "_where": "/media/quadabra/50040A68040A5180/me/e-shop.new/node_modules/material-components-web",
  "bugs": {
    "url": "https://github.com/material-components/material-components-web/issues"
  },
  "dependencies": {
    "@material/base": "^0.34.0",
    "@material/rtl": "^0.34.0",
    "@material/selection-control": "^0.34.1",
    "@material/theme": "^0.34.0",
    "@material/typography": "^0.34.0"
  },
  "description": "Material Components for the web wrapper for laying out form fields and labels next to one another",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-Oge/8Wt+Krduj1Y28BJ70SnrPKUW6PcaNUC++URvnOuXRdMO8MXcTag8cZ2wHNZYbAyq35lOehvXF/U+rqBNjA==",
    "shasum": "b85b2a58d0e9b771bffe3893e35730f2c54d9b36",
    "tarball": "https://registry.npmjs.org/@material/form-field/-/form-field-0.34.1.tgz",
    "fileCount": 11,
    "unpackedSize": 124164
  },
  "homepage": "https://github.com/material-components/material-components-web#readme",
  "keywords": [
    "material components",
    "material design",
    "form"
  ],
  "license": "Apache-2.0",
  "main": "index.js",
  "maintainers": [
    {
      "name": "acdvorak",
      "email": "acdvorak@gmail.com"
    },
    {
      "name": "amsheehan",
      "email": "alex.m.sheehan@gmail.com"
    },
    {
      "name": "aprigogin",
      "email": "andrey.prigogin@gmail.com"
    },
    {
      "name": "azakus",
      "email": "dfreedm2@gmail.com"
    },
    {
      "name": "bonniez",
      "email": "bonniez@google.com"
    },
    {
      "name": "bwobrien",
      "email": "obrien.test@gmail.com"
    },
    {
      "name": "kfranqueiro",
      "email": "kenneth.franqueiro@gmail.com"
    },
    {
      "name": "lynnjepsen",
      "email": "lynnjepsen@google.com"
    },
    {
      "name": "material-admin",
      "email": "lynnjepsen+npm@google.com"
    },
    {
      "name": "moog16",
      "email": "mattgoo@gmail.com"
    },
    {
      "name": "patrickrodee",
      "email": "prodee@google.com"
    },
    {
      "name": "williamernest",
      "email": "williamernest@google.com"
    }
  ],
  "name": "@material/form-field",
  "optionalDependencies": {},
  "readme": "<!--docs:\ntitle: \"Form Fields\"\nlayout: detail\nsection: components\npath: /catalog/input-controls/form-fields/\n-->\n\n# Form Fields\n\nMDC Form Field provides an `mdc-form-field` helper class for easily making theme-aware, RTL-aware\nform field + label combos. It also provides an `MDCFormField` class for easily making input ripples\nrespond to label events.\n\n## Installation\n\n```\nnpm install @material/form-field\n```\n\n## CSS Usage\n\nThe `mdc-form-field` class can be used as a parent element, with any combination of adjacent `input` and `label` as\nimmediate children:\n\n```html\n<div class=\"mdc-form-field\">\n  <input type=\"checkbox\" id=\"input\">\n  <label for=\"input\">Input Label</label>\n</div>\n```\n\nBy default, this will position the label after the input. You can change this behavior using the\n`align-end` modifier class.\n\n```html\n<div class=\"mdc-form-field mdc-form-field--align-end\">\n  <input type=\"checkbox\" id=\"input\">\n  <label for=\"input\">Input Label</label>\n</div>\n```\n\nNow the label will be positioned before the checkbox.\n\n### Usage with MDC Web Components\n\n`mdc-form-field` works not just with `input` elements, but with _any_ immediate child element as long as its\nsuccessive sibling is a `label` element. This means it will work for MDC Web form controls such as Checkbox and Radio:\n\n```html\n<div class=\"mdc-form-field\">\n  <div class=\"mdc-checkbox\">\n    <input type=\"checkbox\"\n           id=\"my-checkbox\"\n           class=\"mdc-checkbox__native-control\"/>\n    <div class=\"mdc-checkbox__background\">\n      <svg class=\"mdc-checkbox__checkmark\"\n           viewBox=\"0 0 24 24\">\n        <path class=\"mdc-checkbox__checkmark-path\"\n              fill=\"none\"\n              stroke=\"white\"\n              d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"/>\n      </svg>\n      <div class=\"mdc-checkbox__mixedmark\"></div>\n    </div>\n  </div>\n  <label for=\"my-checkbox\" id=\"my-checkbox-label\">This is my checkbox</label>\n</div>\n```\n\n> Note that MDC Form Field is **not** intended for cases where a label and input are already handled together by\n> another component's styles and logic. For example, JavaScript-enhanced instances of MDC Text Field already manage\n> a label and input together under their own root element.\n\n### RTL Support\n\n`mdc-form-field` is automatically RTL-aware, and will re-position elements within an RTL context.\n`mdc-form-field` will apply RTL styles whenever it, or its ancestors, has a `dir=\"rtl\"` attribute.\n\n\n## JS Usage\n\n### Including in code\n\n#### ES2015\n\n```javascript\nimport {MDCFormField, MDCFormFieldFoundation} from '@material/form-field';\n```\n\n#### CommonJS\n\n```javascript\nconst mdcFormField = require('mdc-form-field');\nconst MDCFormField = mdcFormField.MDCFormField;\nconst MDCFormFieldFoundation = mdcFormField.MDCFormFieldFoundation;\n```\n\n#### AMD\n\n```javascript\nrequire(['path/to/mdc-form-field'], mdcFormField => {\n  const MDCFormField = mdcFormField.MDCFormField;\n  const MDCFormFieldFoundation = mdcFormField.MDCFormFieldFoundation;\n});\n```\n\n#### Global\n\n```javascript\nconst MDCFormField = mdc.formField.MDCFormField;\nconst MDCFormFieldFoundation = mdc.formField.MDCFormFieldFoundation;\n```\n\n### Instantiation\n\n```javascript\nimport {MDCFormField} from '@material/form-field';\n\nconst formField = new MDCFormField(document.querySelector('.mdc-form-field'));\n```\n\n### MDCFormField API\n\nThe `MDCFormField` functionality is exposed through a single accessor method.\n\n#### MDCFormField.input\n\nRead-write property that works with an instance of an MDC Web input element.\n\nIn order for the label ripple integration to work correctly, this property needs to be set to a\nvalid instance of an MDC Web input element which exposes a `ripple` getter.\n\n```javascript\nconst formField = new MDCFormField(document.querySelector('.mdc-form-field'));\nconst radio = new MDCRadio(document.querySelector('.mdc-radio'));\n\nformField.input = radio;\n```\n\nNo action is taken if the `input` property is not set or the input instance doesn't expose a\n`ripple` getter.\n\n\n### Adapter\n\n| Method Signature | Description |\n| --- | --- |\n| `registerInteractionHandler(type: string, handler: EventListener) => void` | Adds an event listener `handler` for event type `type` to the label. |\n| `deregisterInteractionHandler(type: string, handler: EventListener) => void` | Removes an event listener `handler` for event type `type` to the label. |\n| `activateInputRipple() => void` | Activates the ripple on the input element. Should call `activate` on the input element's `ripple` property. |\n| `deactivateInputRipple() => void` | Deactivates the ripple on the input element. Should call `deactivate` on the input element's `ripple` property. |\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/material-components/material-components-web.git"
  },
  "version": "0.34.1"
}
